<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="activity">
	<insert id="insertActivity" parameterType="act">
		insert into activity
		values(
		activity_no_seq.nextval,
		#{activityName},
		#{activityPrice},
		#{activityManager},
		#{activityIntroduce},
		#{activityDetail},
		#{activityLimit},
		#{activityCategory},
		#{activityStatus},
		to_date(#{startDate},'yyyy-mm-dd'),
		to_date(#{endDate},'yyyy-mm-dd'),
		#{filepath},
		#{etc}
		)
		<selectKey resultType="_int" order="AFTER" keyProperty="activityNo">
			select max(activity_no) from activity
		</selectKey>
	</insert>

	<select id ="getAllActivity" parameterType="map" resultType="act">
		select * from
			(select rownum as rnum,a.* from
			(select  
				activity_no as activityNo,
				activity_name as activityName,
				to_char(activity_price,'999,999,999')as activityPrice,
				activity_manager as activityManager,
				activity_introduce as activityIntroduce,
				activity_detail as activityDetail,
				activity_limit as activityLimit,
				activity_category as activityCategory,
				activity_status as activityStatus,
				to_char(start_date,'yyyy-mm-dd') as startDate,
				to_char(end_date,'yyyy-mm-dd')  as endDate,
				filepath,
				etc,
				m.member_name as activityManagerName
		from activity a
		join members m 
		on a.activity_manager = m.member_no
		order by 1 desc)a)	
		where rnum between #{start} and #{end}
	</select>

	<select id="totalCount" parameterType="map" resultType="int">
		select count(*) from activity
	</select>
	
	<select id ="categoryActivityList" parameterType="map" resultType="act">
		select * from
			(select rownum as rnum,a.* from
			(select  
				activity_no as activityNo,
				activity_name as activityName,
				to_char(activity_price,'999,999,999')as activityPrice,
				activity_manager as activityManager,
				activity_introduce as activityIntroduce,
				activity_detail as activityDetail,
				activity_limit as activityLimit,
				activity_category as activityCategory,
				activity_status as activityStatus,
				to_char(start_date,'yyyy-mm-dd') as startDate,
				to_char(end_date,'yyyy-mm-dd')  as endDate,
				filepath,
				etc,
				m.member_name as activityManagerName
		from activity a
		join members m 
		on a.activity_manager = m.member_no
		where activity_status= 0
		<if test='!activityCategory.equals("AL")'>
			and activity_category = #{activityCategory}
		</if>
		order by 1 desc)a)	
		where rnum between #{start} and #{end}
	</select>
	
	<select id="categoryActivityCnt" parameterType="map" resultType="int">
		select count(*) from activity
		where activity_status= 0
		<if test='!activityCategory.equals("AL")'>
			and activity_category= #{activityCategory }
		</if>
	</select>
	
	<select id="getOneActivity" parameterType="act" resultType="act" resultMap="getActivityInfo">
		select  
				a.*,
				to_char(a.start_date,'yyyy-mm-dd') as startDate,	
				to_char(a.end_date,'yyyy-mm-dd') as endDate,	
				m.member_name as activityManagerName
		from activity a
		join members m 
		on a.activity_manager = m.member_no
		where a.activity_no = #{activityNo }
	</select>

	<resultMap type="act" id="getActivityInfo">
	<result column="activity_no" property="activityNo" />
	<result column="activity_name" property="activityName" />
	<result column="activity_price" property="activityPrice" />
	<result column="activity_manager" property="activityManager" />
	<result column="activity_introduce" property="activityIntroduce" />
	<result column="activity_detail" property="activityDetail" />
	<result column="activity_limit" property="activityLimit" />
	<result column="activity_category" property="activityCategory" />
	<result column="activity_status" property="activityStatus" />
	<result column="filepath" property="filepath" />
	<result column="etc" property="etc"/>
	<collection 
			property="fileList"
			select="getOneFiles"
			column="activity_no"
			ofType="actF" 
			javaType="java.util.ArrayList"
	/>
		

	</resultMap>
	
	
	<insert id="insertFile" parameterType="actF">
		insert into 
		activity_file
		values
		(
			ACTIVITY_FILENO_SEQ.nextval,
			#{activityNo},#{filename},#{filepath}
		)
	</insert>
	
	<select id="getOneFiles" parameterType="_int" resultType="actF">
		select  
			activity_fileno as fileNo,
			activity_no as classNo,
			activity_filename as filename,
			activity_filepath as filepath
		from activity_file
		where activity_no = #{activityNo}
	</select>
	
	<update id="activityUpdate" parameterType="act">
		update activity
			set 
			<if test="filepath != null">
			filepath = #{filepath},
			</if>
			activity_name = #{activityName},
			activity_price = #{activityPrice},
			activity_introduce =#{activityIntroduce},
			activity_detail =#{activityDetail},
			activity_manager = #{activityManager},
			activity_category =#{activityCategory},
			activity_limit =#{activityLimit},
			start_date =#{startDate},
			end_date =#{endDate},
			etc = #{etc}
		where activity_no = #{activityNo}
	</update>
	
	<delete id="delActdFiles" parameterType="_int">
		delete 
		from activity_file
		where activity_fileno = #{_parameter}
	</delete>
	
	<insert id="actInsertCart" parameterType="Ca">
		insert into carts values(
			cart_seq.nextval,
			#{memberNo},
			null,
			#{activityNo},null,
			#{buyAmount}
		)
	</insert>
	
	<delete id="activityDelete" parameterType="act">
		delete 
		from activity
		where activity_no = #{activityNo}
	</delete>
	
	<insert id="insertActHistory" parameterType="actH">
		insert into activity_history values(
			#{memberNo},
			#{activityNo}
		)
	</insert>
	
	<select id="checkActHistory" parameterType="actH" resultType="actH">
		select
		member_no as membmerNo,
		activity_no as activityNo
		from activity_history
		where member_no = #{memberNo}
		and activity_no = #{activityNo}
	</select>
	
	<insert id="insertActivityReview" parameterType="actR">
		insert into activity_review values(
			ACTIVITY_REVIEW_NO_SEQ.nextval,
			#{activityNo},
			#{actRiviewWriter},
			#{actReviewContent},
			#{actReviewRate},
			to_char(sysdate,'yyyy-mm-dd')
		)
	</insert>
	
	<select id ="actReviewList" parameterType="map" resultType="actR">
		select * from
			(select rownum as rnum,a.* from
			(select  
				activity_review_no as actReviewNo,
                activity_no as activityNo,	   
                activity_review_writer as actRiviewWriter,
                activity_review_content as actReviewContent,
                activity_review_rate as actReviewRate,
                activity_review_date as actReviewDate,
                m.member_name as memberName
		from ACTIVITY_REVIEW a
		left join members m 
		on a.activity_review_writer = m.member_no
		where activity_no = #{activityNo}
		order by 1 desc)a)	
		where rnum between #{start} and #{end}
	</select>
	
	<select id="selectActReviewCnt" resultType="int" parameterType="int">
		select count(*) from ACTIVITY_REVIEW
		where activity_no = #{activityNo}
	</select>
</mapper>































