<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="nsClass">
	<select id ="getAllClass" parameterType="map" resultType="cla">
		select * from
			(select rownum as rnum,c.* from
			(select  
				class_no as classNo,
				class_name as className,
				class_teacher as classTeacher,
				to_char(class_price,'999,999,999') as classPrice,
				class_limit as classLimit,
				class_status as classStatus,
				class_category as classCategory,
				products,
				to_char(start_date,'yyyy-mm-dd') as startDate,
				to_char(end_date,'yyyy-mm-dd')  as endDate,
				filepath,
				TO_DATE(end_date) - TO_DATE(start_date)+1 as dayDate,
				m.member_name as teacherName
		from CLASSES c
		join members m 
		on c.class_teacher = m.member_no
		where class_status in (1,2,3,4)
		order by 1 desc)c)	
		where rnum between #{start} and #{end}
		
	</select>
	
	
	<!--  모든 칼럼 셀렉트
	<select id="getAllMembers" resultType="m">
	select
	member_no as memberNo,
	member_id as memberId,	   
	member_pw as memberPW,
    member_name as memberName,
	member_phone as memberPhone,
	member_email as memberEmail,
	member_addr	as memberAddr,    
	member_grade as memberGrade,
	member_birth as memberBirth,
	enroll_date	as enrollDate,
	nickname as nickName,
	member_state as memberState,	
    member_img as memberImg
    from members
	</select>
	 -->
	 
	 
	<select id="totalCount" resultType="int">
		select count(*) from classes
	</select>

	<insert id="insertClass" parameterType="cla">
		insert into
		CLASSES
		values(
		class_seq.nextval,#{className},#{classTeacher},
		'0',#{classLimit},0,#{classCategory},#{products},
		to_date(#{startDate},'yyyy-mm-dd'),	to_date(#{endDate},'yyyy-mm-dd'),
		#{filepath},#{teacherIntroduce},
		#{curriculum})
		<selectKey resultType="_int" order="AFTER" keyProperty="classNo">
			select max(class_no) from classes
		</selectKey>
	</insert>
	
	<insert id="insertFile" parameterType="claF">
		insert into 
		class_file
		values
		(
			CLASS_FILENO.nextval,
			#{classNo},#{filename},#{filepath}
		)
	</insert>
	
	<update id="updateMemberGrade" parameterType="int">
		update members
		set member_grade = 2
		where member_no = #{classTeacher}
	</update>
	
	<select id ="getAllCategory" resultType="string">
		select column_name 
		from user_tab_columns 
		where table_name = 'CATEGORY'
	</select>
	


	<!-- 카테고리별 class가져오기 -->
	<select id="selectClassList" parameterType="map" resultType="cla">
		select * from
		    (select rownum as rnum, c.* from
		    (select  
		        class_no as classNo,
		        class_name as className,
		        class_teacher as classTeacher,
		        to_char(class_price,'999,999,999') as classPrice,
		        class_limit as classLimit,
		        class_status as classStatus,
		        class_category as classCategory,
		        products,
		        to_char(start_date,'yyyy-mm-dd') as startDate,
		        to_char(end_date,'yyyy-mm-dd')  as endDate,
		        filepath,
		        TO_DATE(end_date) - TO_DATE(start_date)+1 as dayDate,
		        m.member_name as teacherName
		from CLASSES c
		left join members m 
		on c.class_teacher = m.member_no
		where class_status=2
		<if test='!classCategory.equals("AL")'>
			and class_category= #{classCategory }
		</if>
		order by 1 desc)c)	
		where rnum between #{start } and #{end }
	</select>
	
	<select id="getClassTotal" parameterType="map" resultType="int">
		select count(*) from classes
		where class_status=2
		<if test='!classCategory.equals("AL")'>
			and class_category= #{classCategory }
		</if>
	</select>
	


	
	
	<!-- 클래스  1개 정보와 클래스 파일 리스트 함께 조회 -->
	<select id="selectOneClass" parameterType="cla" resultType="cla" resultMap="getClassInfo">
		select
			c.*, 
			to_char(c.start_date, 'yyyy-mm-dd') as startDate, 
			to_char(c.end_date, 'yyyy-mm-dd') as endDate, 
			member_name
		from classes c
		left join members on(class_teacher = member_no)
		where class_no = #{classNo }
	</select>
	<resultMap type="cla" id="getClassInfo">
		<result column="class_no" property="classNo"/>
		<result column="class_name" property="className"/>
		<result column="class_category" property="classCategory"/>
		<result column="class_price" property="classPrice"/>
		<result column="class_limit" property="classLimit"/>
		<result column="class_status" property="classStatus"/>
		<result column="class_teacher" property="classTeacher"/>
		<result column="filepath" property="filepath"/>
		<result column="products" property="products"/>
		<result column="filepath" property="filepath"/>
		<result column="member_name" property="teacherName"/>
		<result column="curriculum" property="curriculum"/>
		<collection property="fileList"
			select="getClassfiles"
			column="class_no"
			ofType="claF" 
			javaType="java.util.ArrayList"
		/>
	</resultMap>
	<select id="getClassfiles" parameterType="_int" resultType="claF">
		select  
			class_fileno as fileNo,
			class_no as classNo,
			class_filename as filename,
			class_filepath as filepath
		from class_file
		where class_no=#{_parameter}
	</select>
	
	
	<select id="holdClass" resultType="cla">
		select  
			class_no as classNo,
			class_name as className,
			class_teacher as classTeacher,
			class_price as classPrice,
			to_char(start_date,'yyyy-mm-dd') as startDate,
			to_char(end_date,'yyyy-mm-dd') as endDate,
			TO_DATE(end_date) - TO_DATE(start_date)+1 as dayDate,
			m.member_name as teacherName
		from CLASSES c
		join members m 
		on c.class_teacher = m.member_no
		where class_status = 0
	</select>
	
	<select id="getOneClass" parameterType="_int" resultType="cla">
		select  
				class_no as classNo,
				class_name as className,
				class_teacher as classTeacher,
				class_price as classPrice,
				class_limit as classLimit,
				class_status as classStatus,
				class_category as classCategory,
				products,
				to_char(start_date,'yyyy-mm-dd') as startDate,
				to_char(end_date,'yyyy-mm-dd')  as endDate,
				filepath,
				teacher_introduce as teacherIntroduce,
		 		curriculum,
				m.member_name as teacherName,
				m.member_phone as teacherPhone
		from CLASSES c
		join members m 
		on c.class_teacher = m.member_no
		where class_no= #{classNo}
	</select>
	
	<select id="getMyClass" parameterType="_int" resultType="cla">
		select  
				class_no as classNo,
				class_name as className,
				class_teacher as classTeacher,
				filepath
		from CLASSES c
		join members m 
		on c.class_teacher = m.member_no
		where c.class_teacher = #{memberNo}
		and class_status in (0,1,2,3,4)
	</select>

	<select id="getMyEndClass" parameterType="_int" resultType="cla">
		select  
				class_no as classNo,
				class_name as className,
				class_teacher as classTeacher,
				filepath
		from CLASSES c
		join members m 
		on c.class_teacher = m.member_no
		where c.class_teacher = #{memberNo}
		and class_status = 5
	</select>
	 
	<select id="getOneFiles" parameterType="_int" resultType="claF">
		select  
			class_fileno as fileNo,
			class_no as classNo,
			class_filename as filename,
			class_filepath as filepath
		from class_file
		where class_no = #{classNo}
	</select>
	 
	<!-- 신청하고 승인해주는거 -->
	<update id="changeStatus" parameterType="cla">
		update classes
		set class_status = 1,
		 	class_price = #{classPrice}
		where class_no = #{classNo}
	</update>
	
	<!-- 신청 모집 모집중등 변경-->
	<update id="changeStatus2" parameterType="cla">
		update classes
		set class_status = #{classStatus}
		where class_no = #{classNo}
	</update>







	<!-- 클래스 리뷰 작성 -->
	<insert id="insertClassReview" parameterType="crv">
		insert into class_review values (class_review_seq.nextval, #{classNo}, #{classTeacher}, #{memberNo }, #{reviewContent}, #{reviewRate}, to_char(sysdate, 'yyyy-mm-dd'))
	</insert>
	
	
	<!-- 클래스 리뷰 불러오기 -->
	<select id="selectTeacherReview" parameterType="cla" resultType="crv">
		select
			class_review_no as classReviewNo,
			class_no as classNo,
			class_teacher as classTeacher,
			nickname as reviewWriter,
			member_img as memberImg,
			review_rate as reviewRate,
			review_date as reviewDate,
			(select class_name from classes c where c.class_no = r.class_no) as className,
			class_review_content as reviewContent
		from class_review r
		join members on (member_no=class_review_writer)
		where class_teacher = #{classTeacher}
		order by class_review_no desc
	</select>
	
	
	<!-- 클래스 결제 -->
	<insert id="insertPayClassHistory" parameterType="clh">
		insert into class_history values (class_history_seq.nextval, #{classNo }, #{memberNo }, #{amount }, 0)
	</insert>
	
	<!-- 진행중인 클래스 조회 -->
	<select id="selectAllHistory" parameterType="m" resultType="ch">
  select 
        b.CLASS_NO as classNo,
        a.MEMBER_NO as memberNo,
        c.member_name as classTeacher,
        b.CLASS_STATUS as classStatus,
        b.CLASS_NAME as className,
        TO_CHAR(b.START_DATE, 'yyyy-mm-dd') as startDate,
        TO_CHAR(b.END_DATE, 'yyyy-mm-dd')as endDate,
    	(b.end_date - b.start_date) as dayDate
    from class_history a , CLASSES b, members c
    where a.CLASS_NO = b.CLASS_NO  and  b.CLASS_TEACHER = c.member_no and a.member_no=#{memberNo} and b.class_status = 1
	</select>
	
	<!-- 종료된 클래스 조회 -->
	<select id="selectEndHistory" parameterType="m" resultType="ch">
  select 
        b.CLASS_NO as classNo,
        a.MEMBER_NO as memberNo,
        c.member_name as classTeacher,
        b.CLASS_STATUS as classStatus,
        b.CLASS_NAME as className,
        TO_CHAR(b.START_DATE, 'yyyy-mm-dd') as startDate,
        TO_CHAR(b.END_DATE, 'yyyy-mm-dd')as endDate
    from class_history a , CLASSES b, members c
    where a.CLASS_NO = b.CLASS_NO  and  b.CLASS_TEACHER = c.member_no and a.member_no=#{memberNo} and b.class_status = 2
	</select>
	
	<!-- 모집 중인 클래스의 신청 인원 -->
	<select id="selectClassHistorySum" parameterType="cla" resultType="int">
		select NVL(sum(amount), 0) from class_history where class_no=#{classNo }
	</select>

	<delete id="deleteClass" parameterType="int">
		delete from classes
		where class_no = #{classNo}
	</delete>

	<!-- 나의 후기 가져오기 -->
	<select id="selectAllReview" parameterType="m" resultType="crv">
	select
    b.class_name as className,
    a.class_review_content as reviewContent,
    a.review_rate as reviewRate,
    a.review_date as reviewDate
    from class_review a, classes b
    where a.class_no = b.class_no and a.class_review_writer = #{memberNo}
	</select>
</mapper>